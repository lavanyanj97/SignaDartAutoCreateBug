trigger:
- main  # Trigger the pipeline on changes to the main branch

pool:
  vmImage: 'ubuntu-latest'  # Use an Ubuntu VM image for the pipeline

variables:
  pythonVersion: '3.x'  # Specify the Python version to use (3.x version will auto-install the latest)
  azureDevOpsPAT: $(azureDevOpsPAT)  # Personal Access Token for Azure DevOps authentication
  organizationUrl: 'https://dev.azure.com/SignaTechServicesIndia'  # Replace with your Azure DevOps organization URL

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(pythonVersion)'
    addToPath: true

- script: |
    echo "Running Tests..."
    # Replace this with your actual test commands
    pytest tests/
  displayName: 'Run Tests'

- script: |
    echo "Checking if tests failed..."
    if grep -q "failed" test-results.log; then
      echo "Tests failed, creating a bug in Azure DevOps..."
      
      # Construct JSON payload for the bug
      bugPayload=$(cat <<EOF
      {
        "fields": {
          "System.Title": "Automated Test Failure",
          "System.Description": "Tests failed during the pipeline execution. Review the logs.",
          "System.Tags": "Automated;Bug",
          "System.WorkItemType": "Bug"
        }
      }
      EOF
      )

      # Create bug using Azure DevOps API
      curl -X POST \
           -H "Content-Type: application/json" \
           -H "Authorization: Bearer $(AZUREDEVOPSPAT)" \
           -d "$bugPayload" \
           "$(organizationUrl)/_apis/wit/workitems/$Bug?api-version=6.0"

    else
      echo "Tests passed, no bug created."
    fi
  displayName: 'Create Bug in Azure DevOps if Tests Fail'
  env:
    AZUREDEVOPSPAT: $(AZUREDEVOPSPAT)  # Capitalized variable reference
